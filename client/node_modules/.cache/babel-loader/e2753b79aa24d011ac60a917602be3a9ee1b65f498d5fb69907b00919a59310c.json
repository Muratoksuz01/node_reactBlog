{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denem\\\\Documents\\\\node+react\\\\project1\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  let nagivate = useNavigate();\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3).max(15).required(),\n    password: Yup.string().min(3).max(15).required()\n  });\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/auth\", data).then(respone => {\n      nagivate(\"/\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer bg-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"username\",\n          placeholder: \"(ex. jonh...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"(ex. jonh...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"u4zbe8uB2x+Tz4nXYYpE6f1mqBo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","nagivate","initialValues","username","password","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","respone","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","component","id","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/denem/Documents/node+react/project1/client/src/pages/Register.js"],"sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\"\r\nimport axios from \"axios\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n    let nagivate=useNavigate()\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string().min(3).max(15).required(),\r\n        password: Yup.string().min(3).max(15).required(),\r\n    })\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/auth\",data).then((respone) => {\r\n            nagivate (\"/\")\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className='formContainer bg-primary'>\r\n\r\n\r\n\r\n\r\n                    <label htmlFor=\"\">Username</label>\r\n                    <ErrorMessage name='username' component={\"span\"} />\r\n\r\n                    <Field\r\n                        id=\"inputCreatePost\"\r\n                        name=\"username\"\r\n                        placeholder=\"(ex. jonh...)\"\r\n                    ></Field>\r\n\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <ErrorMessage name='password' component={\"span\"} />\r\n\r\n                    <Field\r\n                        id=\"inputCreatePost\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"(ex. jonh...)\"\r\n                    ></Field>\r\n                    <button type='submit'>Register</button>\r\n                </Form>\r\n            </Formik>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}