{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denem\\\\Documents\\\\node+react\\\\project1\\\\client\\\\src\\\\pages\\\\CreatePost.js\";\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  const initialValues = {\n    title: \"\",\n    postText: \"\",\n    username: \"\"\n  };\n  const onSubmit = data => {\n    console.log(data);\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(),\n    postText: Yup.string().required(),\n    username: Yup.string().min(3).max(15).required()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"(ex. jonh...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"postText\",\n          placeholder: \"(ex. jonh...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"username\",\n          placeholder: \"(ex. jonh...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"creata post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Yup","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","CreatePost","initialValues","title","postText","username","onSubmit","data","console","log","validationSchema","object","shape","string","required","min","max","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","component","span","id","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/denem/Documents/node+react/project1/client/src/pages/CreatePost.js"],"sourcesContent":["import React from 'react'\r\nimport * as Yup from \"yup\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nfunction CreatePost() {\r\n    const initialValues={\r\n        title:\"\",\r\n        postText:\"\",\r\n        username:\"\"\r\n    }\r\n    const onSubmit=(data)=>{\r\n        console.log(data)\r\n    }\r\n    const validationSchema=Yup.object().shape({\r\n        title:Yup.string().required() ,\r\n        postText:Yup.string().required()  ,\r\n        username:Yup.string().min(3).max(15).required(), \r\n    })\r\n    return (\r\n        <div className='createPostPage'>\r\n            <Formik initialValues={initialValues}\r\n             onSubmit={onSubmit} \r\n             validationSchema={validationSchema}\r\n             >\r\n                <Form className='formContainer'>\r\n                    <label htmlFor=\"\">Title</label>\r\n                    <ErrorMessage name='title' component={span}/>\r\n                    <Field\r\n                        id=\"inputCreatePost\"\r\n                        name=\"title\"\r\n                        placeholder=\"(ex. jonh...)\"\r\n                    ></Field>\r\n\r\n                    <label htmlFor=\"\">Post:</label>\r\n                    <Field\r\n                        id=\"inputCreatePost\"\r\n                        name=\"postText\"\r\n                        placeholder=\"(ex. jonh...)\"\r\n                    ></Field>\r\n\r\n                    <label htmlFor=\"\">Username</label>\r\n                    <Field\r\n                        id=\"inputCreatePost\"\r\n                        name=\"username\"\r\n                        placeholder=\"(ex. jonh...)\"\r\n                    ></Field>\r\n                    <button type='submit'>creata post</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}